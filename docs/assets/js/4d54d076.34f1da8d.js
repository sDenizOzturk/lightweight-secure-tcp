"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[459],{2199:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>c,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"contributing","title":"Contributing","description":"We welcome contributions to the Lightweight Secure TCP project!","source":"@site/docs/contributing.md","sourceDirName":".","slug":"/contributing","permalink":"/lightweight-secure-tcp/docs/contributing","draft":false,"unlisted":false,"editUrl":"https://github.com/sDenizOzturk/lightweight-secure-tcp/tree/main/docusaurus/docs/contributing.md","tags":[],"version":"current","sidebarPosition":6,"frontMatter":{"title":"Contributing","sidebar_position":6},"sidebar":"tutorialSidebar","previous":{"title":"lwsdebug","permalink":"/lightweight-secure-tcp/docs/reference/utils-lwsdebug"}}');var s=t(4848),r=t(8453);const c={title:"Contributing",sidebar_position:6},o="\ud83e\udd1d Contributing",l={},d=[{value:"\ud83e\uddf0 How to Contribute",id:"-how-to-contribute",level:2},{value:"\ud83d\udca1 Tips",id:"-tips",level:2}];function h(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"-contributing",children:"\ud83e\udd1d Contributing"})}),"\n",(0,s.jsx)(n.p,{children:"We welcome contributions to the Lightweight Secure TCP project!"}),"\n",(0,s.jsx)(n.p,{children:"Whether it's a bug fix, new feature, test improvement, or documentation update, your help is appreciated."}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"-how-to-contribute",children:"\ud83e\uddf0 How to Contribute"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Fork the Repository"})}),"\n",(0,s.jsxs)(n.p,{children:["Go to ",(0,s.jsx)(n.a,{href:"https://github.com/sDenizOzturk/lightweight-secure-tcp",children:"GitHub"})," and click the ",(0,s.jsx)(n.strong,{children:"Fork"})," button."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Clone Your Fork"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"git clone https://github.com/YOUR_USERNAME/lightweight-secure-tcp.git\ncd lightweight-secure-tcp\n"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Create a New Branch"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"git checkout -b your-meaningful-branch-name\n"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Make Your Changes"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["For ",(0,s.jsx)(n.strong,{children:"core C++ code"}),", edit files under ",(0,s.jsx)(n.code,{children:"lib/LightweightSecureTCP/"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:["For ",(0,s.jsx)(n.strong,{children:"examples"}),", use the ",(0,s.jsx)(n.code,{children:"examples/"})," directory."]}),"\n",(0,s.jsxs)(n.li,{children:["For ",(0,s.jsx)(n.strong,{children:"documentation"}),", update markdown files inside ",(0,s.jsx)(n.code,{children:"docusaurus/docs/"}),"."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Build and Test"})}),"\n",(0,s.jsxs)(n.p,{children:["Use the ",(0,s.jsx)(n.code,{children:"test_runner"})," executable to verify that your changes don\u2019t break existing logic."]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["The project uses a top-level ",(0,s.jsx)(n.code,{children:"CMakeLists.txt"}),". You can open this file directly in your IDE."]}),"\n",(0,s.jsxs)(n.li,{children:["If you're using ",(0,s.jsx)(n.strong,{children:"Qt Creator"}),", simply open the root ",(0,s.jsx)(n.code,{children:"CMakeLists.txt"}),", select a kit, and build ",(0,s.jsx)(n.code,{children:"test_runner"}),"."]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["You can also add your own test cases inside the ",(0,s.jsx)(n.code,{children:"tests/"})," directory."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Build the Documentation (if edited)"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"cd docusaurus\nnpm install\nnpm start\nnpm run build\n"})}),"\n",(0,s.jsx)(n.p,{children:"Make sure the documentation builds successfully before committing."}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Commit and Push"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'git add .\ngit commit -m "your-clear-and-descriptive-message"\ngit push origin your-meaningful-branch-name\n'})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Open a Pull Request"})}),"\n",(0,s.jsxs)(n.p,{children:["Go to your fork and open a PR against the ",(0,s.jsx)(n.code,{children:"main"})," branch of the original repo."]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"-tips",children:"\ud83d\udca1 Tips"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Keep commits focused and atomic."}),"\n",(0,s.jsx)(n.li,{children:"Use descriptive PR titles and explanations."}),"\n",(0,s.jsx)(n.li,{children:"Test your code before submitting."}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Thanks for contributing!"})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>c,x:()=>o});var i=t(6540);const s={},r=i.createContext(s);function c(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);