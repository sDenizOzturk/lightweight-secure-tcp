"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[20],{7352:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>a,frontMatter:()=>c,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"reference/encryption-key","title":"Key","description":"Represents a 256-bit encryption key used during the handshake process.","source":"@site/docs/reference/encryption-key.md","sourceDirName":"reference","slug":"/reference/encryption-key","permalink":"/lightweight-secure-tcp/docs/reference/encryption-key","draft":false,"unlisted":false,"editUrl":"https://github.com/sDenizOzturk/lightweight-secure-tcp/tree/main/docusaurus/docs/reference/encryption-key.md","tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"title":"Key","sidebar_position":5},"sidebar":"tutorialSidebar","previous":{"title":"LightweightSecureClient","permalink":"/lightweight-secure-tcp/docs/reference/core-lightweightsecureclient"},"next":{"title":"lwsdebug","permalink":"/lightweight-secure-tcp/docs/reference/utils-lwsdebug"}}');var s=r(4848),i=r(8453);const c={title:"Key",sidebar_position:5},o="Key",d={},l=[{value:"Key",id:"key-1",level:3},{value:"Key",id:"key-2",level:3},{value:"toString",id:"tostring",level:3}];function u(e){const n={br:"br",code:"code",h1:"h1",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"key",children:"Key"})}),"\n",(0,s.jsx)(n.p,{children:"Represents a 256-bit encryption key used during the handshake process."}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"key-1",children:"Key"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"const std::array<uint32_t, 8>& initKey"})}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["Creates a key using a predefined 256-bit value.",(0,s.jsx)(n.br,{}),"\n","Use this when setting your own encryption key."]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"key-2",children:"Key"}),"\n",(0,s.jsxs)(n.p,{children:["Creates a random encryption key.",(0,s.jsx)(n.br,{}),"\n",(0,s.jsx)(n.strong,{children:"Not recommended for production use."}),(0,s.jsx)(n.br,{}),"\n","Prefer explicitly defined keys to ensure deterministic behavior.",(0,s.jsx)(n.br,{}),"\n","Used internally by the library when needed (e.g. for default construction)."]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"tostring",children:"toString"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Return type:"})," ",(0,s.jsx)(n.code,{children:"std::string"})]}),"\n",(0,s.jsxs)(n.p,{children:["Returns a hexadecimal string representation of the key.",(0,s.jsx)(n.br,{}),"\n","Useful for debugging and logging purposes."]})]})}function a(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(u,{...e})}):u(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>c,x:()=>o});var t=r(6540);const s={},i=t.createContext(s);function c(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);