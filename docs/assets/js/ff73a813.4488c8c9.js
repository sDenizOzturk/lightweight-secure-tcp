"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[262],{8056:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>c,default:()=>h,frontMatter:()=>l,metadata:()=>s,toc:()=>a});const s=JSON.parse('{"id":"internals/keep-alive","title":"KeepAlive Mechanism","description":"The KeepAlive system ensures that an active session stays alive and responsive.","source":"@site/docs/internals/keep-alive.md","sourceDirName":"internals","slug":"/internals/keep-alive","permalink":"/lightweight-secure-tcp/docs/internals/keep-alive","draft":false,"unlisted":false,"editUrl":"https://github.com/sDenizOzturk/lightweight-secure-tcp/tree/main/docusaurus/docs/internals/keep-alive.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"title":"KeepAlive Mechanism","sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"Disconnect Packet","permalink":"/lightweight-secure-tcp/docs/internals/lightweightsecuretcp-packets/disconnect"},"next":{"title":"Randomized Padding","permalink":"/lightweight-secure-tcp/docs/internals/random-padding"}}');var t=i(4848),r=i(8453);const l={title:"KeepAlive Mechanism",sidebar_position:3},c="KeepAlive Mechanism",o={},a=[{value:"\ud83d\udd01 How It Works",id:"-how-it-works",level:2},{value:"\ud83e\udde0 Configuration",id:"-configuration",level:2},{value:"\ud83d\udce6 What Is Sent?",id:"-what-is-sent",level:2},{value:"\ud83d\udea8 What If It Fails?",id:"-what-if-it-fails",level:2}];function d(e){const n={br:"br",code:"code",h1:"h1",h2:"h2",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"keepalive-mechanism",children:"KeepAlive Mechanism"})}),"\n",(0,t.jsxs)(n.p,{children:["The KeepAlive system ensures that an active session stays alive and responsive.",(0,t.jsx)(n.br,{}),"\n","It prevents unintentional timeouts due to inactivity by periodically sending small packets."]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"-how-it-works",children:"\ud83d\udd01 How It Works"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["After a successful handshake, ",(0,t.jsx)(n.strong,{children:"both client and server"})," start sending KeepAlive packets"]}),"\n",(0,t.jsx)(n.li,{children:"Each KeepAlive is sent at a fixed interval (e.g. every 5 seconds)"}),"\n",(0,t.jsxs)(n.li,{children:["If ",(0,t.jsx)(n.strong,{children:"no message or KeepAlive"})," is received from the other side within the ",(0,t.jsx)(n.strong,{children:"inactivity timeout"})," window, the connection is closed"]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"-configuration",children:"\ud83e\udde0 Configuration"}),"\n",(0,t.jsxs)(n.p,{children:["You can configure both interval and timeout using ",(0,t.jsx)(n.code,{children:"setKeepAliveConfig(...)"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-cpp",children:"server.setKeepAliveConfig(keepAliveIntervalMs, inactivityTimeoutMs);\nclient.setKeepAliveConfig(keepAliveIntervalMs, inactivityTimeoutMs);\n"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"keepAliveIntervalMs"}),": how often to send a KeepAlive (must be < timeout)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"inactivityTimeoutMs"}),": max allowed silence before disconnection\nUse ",(0,t.jsx)(n.code,{children:"-1"})," to disable the timeout check completely"]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"-what-is-sent",children:"\ud83d\udce6 What Is Sent?"}),"\n",(0,t.jsxs)(n.p,{children:["A KeepAlive packet contains ",(0,t.jsx)(n.strong,{children:"only 1 byte"}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"TYPE"}),": 0x05"]}),"\n",(0,t.jsxs)(n.li,{children:["It is ",(0,t.jsx)(n.strong,{children:"not encrypted"})]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"These are small and lightweight, they do not carry any actual message content."}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"-what-if-it-fails",children:"\ud83d\udea8 What If It Fails?"}),"\n",(0,t.jsx)(n.p,{children:"If the other side becomes unresponsive:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Session is closed automatically"}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"onSessionEnded()"})," is triggered on the receiver side"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"onDisconnected()"})," is triggered on the client"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"This helps detect network issues or crashed peers without needing manual pings."})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>l,x:()=>c});var s=i(6540);const t={},r=s.createContext(t);function l(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);