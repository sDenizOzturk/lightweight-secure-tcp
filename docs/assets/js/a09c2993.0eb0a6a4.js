"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[899],{1920:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>c,default:()=>h,frontMatter:()=>o,metadata:()=>s,toc:()=>a});const s=JSON.parse('{"id":"introduction","title":"Introduction","description":"LightweightSecureTCP is a modern, lightweight, and secure TCP messaging library written in C++.","source":"@site/docs/introduction.md","sourceDirName":".","slug":"/introduction","permalink":"/lightweight-secure-tcp/docs/introduction","draft":false,"unlisted":false,"editUrl":"https://github.com/sDenizOzturk/lightweight-secure-tcp/tree/main/docusaurus/docs/introduction.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","next":{"title":"Getting Started","permalink":"/lightweight-secure-tcp/docs/category/getting-started"}}');var i=n(4848),r=n(8453);const o={sidebar_position:1},c="Introduction",d={},a=[{value:"Why LightweightSecureTCP?",id:"why-lightweightsecuretcp",level:2},{value:"Key Features",id:"key-features",level:2},{value:"Example Use Cases",id:"example-use-cases",level:2}];function l(e){const t={a:"a",blockquote:"blockquote",br:"br",h1:"h1",h2:"h2",header:"header",hr:"hr",li:"li",p:"p",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"introduction",children:"Introduction"})}),"\n",(0,i.jsx)(t.h1,{id:"lightweightsecuretcp",children:"LightweightSecureTCP"}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.strong,{children:"LightweightSecureTCP"})," is a modern, lightweight, and secure TCP messaging library written in C++.",(0,i.jsx)(t.br,{}),"\n","It provides a simple protocol for reliable, encrypted communication between embedded systems and desktop applications."]}),"\n",(0,i.jsxs)(t.blockquote,{children:["\n",(0,i.jsx)(t.p,{children:"Requires a C++17-compatible compiler and standard library"}),"\n"]}),"\n",(0,i.jsx)(t.hr,{}),"\n",(0,i.jsx)(t.h2,{id:"why-lightweightsecuretcp",children:"Why LightweightSecureTCP?"}),"\n",(0,i.jsxs)(t.p,{children:["Standard TCP does not offer encryption, authentication, or structured messaging.",(0,i.jsx)(t.br,{}),"\n","Libraries like TLS or mbedTLS can be too heavy for constrained environments such as microcontrollers."]}),"\n",(0,i.jsx)(t.p,{children:"LightweightSecureTCP fills this gap by offering:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["A lightweight protocol with ",(0,i.jsx)(t.strong,{children:"secure handshake"})," and ",(0,i.jsx)(t.strong,{children:"message validation"})]}),"\n",(0,i.jsxs)(t.li,{children:["Cross-platform support: ",(0,i.jsx)(t.strong,{children:"ESP32"}),", ",(0,i.jsx)(t.strong,{children:"Linux/macOS/Windows"}),", ",(0,i.jsx)(t.strong,{children:"Qt"})]}),"\n",(0,i.jsx)(t.li,{children:"Easy-to-integrate C++ API with no external dependencies"}),"\n"]}),"\n",(0,i.jsx)(t.hr,{}),"\n",(0,i.jsx)(t.h2,{id:"key-features",children:"Key Features"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["\ud83d\udd10 ",(0,i.jsx)(t.strong,{children:"Secure Handshake"}),": Ensures identity verification before message transfer"]}),"\n",(0,i.jsxs)(t.li,{children:["\ud83d\udca1 ",(0,i.jsx)(t.strong,{children:"Lightweight Protocol"}),": Suitable for embedded and desktop environments"]}),"\n",(0,i.jsxs)(t.li,{children:["\ud83d\udd01 ",(0,i.jsx)(t.strong,{children:"KeepAlive & Timeout Detection"}),": Ensures connection liveness"]}),"\n",(0,i.jsxs)(t.li,{children:["\u2709\ufe0f ",(0,i.jsx)(t.strong,{children:"Structured Messaging"}),": All communication uses validated packets"]}),"\n",(0,i.jsxs)(t.li,{children:["\ud83d\udd0c ",(0,i.jsx)(t.strong,{children:"Multi-platform Ready"}),": Works with CMake, PlatformIO, and Qt projects"]}),"\n"]}),"\n",(0,i.jsx)(t.hr,{}),"\n",(0,i.jsx)(t.h2,{id:"example-use-cases",children:"Example Use Cases"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"Secure messaging between an ESP32 and a desktop app"}),"\n",(0,i.jsx)(t.li,{children:"Localhost testing of socket-based applications"}),"\n",(0,i.jsx)(t.li,{children:"Qt-based GUI apps with secure networking needs"}),"\n",(0,i.jsx)(t.li,{children:"Lightweight alternative to TLS sockets for embedded firmware"}),"\n"]}),"\n",(0,i.jsx)(t.hr,{}),"\n",(0,i.jsxs)(t.p,{children:["Let\u2019s get started with the ",(0,i.jsx)(t.a,{href:"getting-started/cmake",children:"Getting Started"})," guide \u2192"]})]})}function h(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>c});var s=n(6540);const i={},r=s.createContext(i);function o(e){const t=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),s.createElement(r.Provider,{value:t},e.children)}}}]);